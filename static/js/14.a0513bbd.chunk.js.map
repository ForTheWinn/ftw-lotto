{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","scenes/maintain/components/verify/index.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__webpack_require__","d","__webpack_exports__","Verify","props","status","nlp2API","_useContext","useContext","InvokerContext","state","dispatch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","height","justifyContent","padding","alt","src","availableVerifications","disabled","onClick","wallet","invokeScript","NLP2API","getInvokeScript","verify","address","openInvoker","_objectSpread"],"mappings":"2FAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,EAZAQ,EAAAC,EAAAC,EAAA,sBAAAX,qTC2DeY,UAnDA,SAACC,GAAiB,IAEvBC,EADYD,EAAZE,QACAD,OAFuBE,EAGHC,qBAAWC,KAA/BC,EAHuBH,EAGvBG,MAAOC,EAHgBJ,EAGhBI,SAcf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEC,OAAQ,SACrCL,EAAAC,EAAAC,cAAA,OACEC,UAAU,iCACVC,MAAO,CAAEE,eAAgB,SAAUC,QAAS,KAE5CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,OAAKM,IAAI,SAASC,IAA8B,yBAGpDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,kBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,SACSV,EAAOiB,uBADhB,YAGAV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,sEACAF,EAAAC,EAAAC,cAAA,4CAGJF,EAAAC,EAAAC,cAAA,UACES,SAA4C,IAAlClB,EAAOiB,uBACjBE,QArCS,WACf,GAAId,EAAMe,OAAQ,CAChB,IAAMC,EAAeC,IAAQC,gBAAgBC,OAAO,CAClDnB,EAAMe,OAAOK,UAEfnB,EAASoB,iWAATC,CAAA,GACKN,SAGLf,EAASoB,eA6BLhB,UAAU,qBAHZ","file":"static/js/14.a0513bbd.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useContext } from \"react\";\nimport { InvokerContext } from \"@neo-react/invoker\";\nimport {NLP2API} from \"@ftw-js/api\";\n\ninterface Props {\n  nlp2API: NLP2API\n}\n\nconst Verify = (props: Props) => {\n  const { nlp2API } = props;\n  const { status } = nlp2API;\n  const { state, dispatch } = useContext(InvokerContext);\n  const onVerify = (): void => {\n    if (state.wallet) {\n      const invokeScript = NLP2API.getInvokeScript.verify([\n        state.wallet.address,\n      ]);\n      dispatch.openInvoker({\n        ...invokeScript,\n      });\n    } else {\n      dispatch.openInvoker();\n    }\n  };\n\n  return (\n    <div className=\"card\" style={{ height: \"100%\" }}>\n      <div\n        className=\"card-image is-centered is-flex\"\n        style={{ justifyContent: \"center\", padding: 10 }}\n      >\n        <figure className=\"image is-128x128\">\n          <img alt=\"verify\" src={process.env.PUBLIC_URL + \"/assets/verify.svg\"} />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <p className=\"title is-5\">Verify tickets</p>\n        <p className=\"subtitle is-7\">\n          Total {status.availableVerifications} tickets\n        </p>\n        <div className=\"content is-small\">\n          <ul>\n            <li>Earn 5% of each ticket price that you verify</li>\n            <li>New verification will be available right after new draws</li>\n            <li>First come first serve basis</li>\n          </ul>\n        </div>\n        <button\n          disabled={status.availableVerifications === 0}\n          onClick={onVerify}\n          className=\"button is-primary\"\n        >\n          Verify\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;\n"],"sourceRoot":""}