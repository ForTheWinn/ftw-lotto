{"version":3,"sources":["components/with-detail/index.tsx","scenes/results/index.tsx","scenes/results/Detail.tsx","scenes/results/List.tsx"],"names":["withDetail","ListComponent","DetailComponent","_React$PureComponent","List","_getPrototypeOf2","_this","Object","_Users_ed_Projects_modules_lottery_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","_Users_ed_Projects_modules_lottery_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_ed_Projects_modules_lottery_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","concat","state","data","undefined","onOpen","setState","onClose","_Users_ed_Projects_modules_lottery_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_ed_Projects_modules_lottery_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","assign","props","onClick","type","react_icons_fa__WEBPACK_IMPORTED_MODULE_7__","style","padding","React","PureComponent","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ftw_js_fetch_paginate__WEBPACK_IMPORTED_MODULE_1__","_components_with_detail__WEBPACK_IMPORTED_MODULE_2__","_List__WEBPACK_IMPORTED_MODULE_3__","_Detail__WEBPACK_IMPORTED_MODULE_4__","_components_with_status__WEBPACK_IMPORTED_MODULE_5__","ResultList","Detail","withStatus","_ref","nlp2API","console","log","pageSize","load","getResults","moment_moment__WEBPACK_IMPORTED_MODULE_1__","moment_moment__WEBPACK_IMPORTED_MODULE_1___default","ResultDetail","gameNo","winningNumbers","caster","totalTickets","totalVerifiedTickets","ftxWinners","cneoWinners","cgasWinners","createdAt","join","Math","round","moment","unix","format","data-label","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","items","map","game","colSpan"],"mappings":"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","file":"static/js/8.3d0ba531.chunk.js","sourcesContent":["import React from \"react\";\nimport className from \"classnames\";\nimport { FaAngleLeft } from \"react-icons/fa\";\n\nconst withDetail = (ListComponent: any, DetailComponent: any) => {\n  return class List extends React.PureComponent {\n    state = {\n      data: undefined,\n    };\n\n    onOpen = (data: any) => {\n      this.setState({\n        data,\n      });\n    };\n\n    onClose = () => {\n      this.setState({ data: undefined });\n    };\n\n    render() {\n      const { data } = this.state;\n      return (\n        <div className=\"is-relative\">\n          <div className={className(data ? \"is-hidden\" : \"\")}>\n            <ListComponent {...this.props} onClick={this.onOpen} />\n          </div>\n          {data ? (\n            <div>\n              <div>\n                <button\n                  onClick={this.onClose}\n                  type=\"button\"\n                  className=\"button is-small is-light\"\n                >\n                  <FaAngleLeft /> Back to list\n                </button>\n                <div style={{ padding: \"15px\" }}>\n                  <DetailComponent {...this.props} data={data} />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n  }\n};\n\nexport default withDetail;\n","import React from \"react\";\nimport Paginate from \"@ftw-js/fetch-paginate\";\nimport withDetail from \"../../components/with-detail\";\nimport List from \"./List\";\nimport Detail from \"./Detail\";\nimport withStatus from \"../../components/with-status\";\nimport { NLP2API } from \"@ftw-js/api\";\n\nconst ResultList = withDetail(List, Detail);\n\ninterface Props {\n  nlp2API: NLP2API;\n}\n\nconst Results = ({ nlp2API }: Props) => {\n  console.log(\"Display: Results\");\n  return (\n    <div className=\"box\">\n      <Paginate pageSize={30} load={nlp2API.getResults}>\n        <ResultList />\n      </Paginate>\n    </div>\n  );\n};\n\nexport default withStatus(Results);\n","import React from \"react\";\nimport moment from \"moment/moment\";\n\nexport interface ResultProps {\n  data: ResultItem;\n}\n\nexport interface ResultItem {\n  gameNo: number;\n  winningNumbers: [number];\n  lastTicketNo: number;\n  caster: string;\n  ftxWinners: number[];\n  cneoWinners: number[];\n  cgasWinners: number[];\n  totalTickets: number;\n  totalVerifiedTickets: number;\n  createdAt: number;\n}\n\nconst ResultDetail = ({ data }: ResultProps) => {\n  const {\n    gameNo,\n    winningNumbers,\n    caster,\n    totalTickets,\n    totalVerifiedTickets,\n    ftxWinners,\n    cneoWinners,\n    cgasWinners,\n    createdAt,\n  } = data;\n\n  return (\n    <div className=\"content\">\n      <h6>Game no</h6>\n      <p>{gameNo}</p>\n      <h6>Winning numbers</h6>\n      <p>{winningNumbers.join(\",\")}</p>\n      <h6>Drawing caster</h6>\n      <p>{caster}</p>\n      <h6>Verification status</h6>\n      <p>{`${Math.round(\n        (totalVerifiedTickets / totalTickets) * 100\n      )}% (${totalVerifiedTickets}/${totalTickets})`}</p>\n      <h6>Drawing at</h6>\n      <p>{moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}</p>\n      {totalVerifiedTickets === totalTickets ? (\n        <div>\n          <h6>Winners</h6>\n          <table className=\"table is-bordered is-striped has-mobile-cards\">\n            <thead>\n              <tr>\n                <th>Matched</th>\n                <th>FTX tickets</th>\n                <th>CNEO tickets</th>\n                <th>CGAS tickets</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td data-label=\"Matched\">5 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[3]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[3]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[3]}</td>\n              </tr>\n              <tr>\n                <td data-label=\"Matched\">4 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[2]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[2]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[2]}</td>\n              </tr>\n              <tr>\n                <td data-label=\"Matched\">3 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[1]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[1]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[1]}</td>\n              </tr>\n              <tr>\n                <td data-label=\"Matched\">2 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[0]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[0]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[0]}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ResultDetail;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Result from \"./Detail\";\n\ninterface ResultsProps {\n  items?: Result[];\n  isLoading?: boolean;\n  onClick: (data: any) => void;\n}\n\ninterface Result {\n  gameNo: number;\n  winningNumbers: [number];\n  ticketNo: number;\n  player: string;\n  numbers: [number];\n  createdAt: number;\n}\n\nconst ResultList = ({ items, onClick }: ResultsProps) => {\n  return (\n    <table className=\"table is-fullwidth has-mobile-cards is-hoverable\">\n      <thead>\n        <tr>\n          <th>Draw #</th>\n          <th>Winning numbers</th>\n          <th>Played at</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map(game => {\n            const { winningNumbers, gameNo, createdAt } = game;\n\n            return (\n              <tr onClick={() => onClick(game)} key={gameNo}>\n                <td data-label=\"Game #\">{gameNo}</td>\n                <td data-label=\"Winning numbers\">{winningNumbers.join(\",\")}</td>\n                <td>\n                  {moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <tr>\n            <td colSpan={3}>No draws</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ResultList;\n"],"sourceRoot":""}