{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","scenes/maintain/components/draw/index.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__webpack_require__","d","__webpack_exports__","Draw","props","status","nlp2API","_useContext","useContext","InvokerContext","state","dispatch","onDraw","wallet","invokeScript","NLP2API","getInvokeScript","draw","address","openInvoker","_objectSpread","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","height","justifyContent","padding","alt","src","moment","nextDrawingAt","format","react_countdown_now__WEBPACK_IMPORTED_MODULE_2__","date","renderer","_ref","hours","minutes","seconds","completed","onClick","disabled"],"mappings":"2FAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,EAZAQ,EAAAC,EAAAC,EAAA,sBAAAX,+UCuEeY,UA7DF,SAACC,GAAiB,IAErBC,EADYD,EAAZE,QACAD,OAFqBE,EAGDC,qBAAWC,KAA/BC,EAHqBH,EAGrBG,MAAOC,EAHcJ,EAGdI,SACTC,EAAS,WACb,GAAIF,EAAMG,OAAQ,CAChB,IAAMC,EAAeC,IAAQC,gBAAgBC,KAAK,CAACP,EAAMG,OAAOK,UAChEP,EAASQ,iWAATC,CAAA,GACKN,SAGLH,EAASQ,eAIb,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEC,OAAQ,SACrCL,EAAAC,EAAAC,cAAA,OACEC,UAAU,iCACVC,MAAO,CAAEE,eAAgB,SAAUC,QAAS,KAE5CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,OAAKM,IAAK,OAAQC,IAA8B,uBAGpDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,gBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,oCACoC,IACjCO,IAAO1B,EAAO2B,eAAeC,OAAO,mBAEvCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,sEACAF,EAAAC,EAAAC,cAAA,4CAGJF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,KAAM9B,EAAO2B,cACbI,SAAU,SAAAC,GACR,OADoDA,EAAzCC,MAAyCD,EAAlCE,QAAkCF,EAAzBG,QAAyBH,EAAhBI,UAGhCpB,EAAAC,EAAAC,cAAA,UAAQmB,QAAS9B,EAAQY,UAAU,qBAAnC,QAMAH,EAAAC,EAAAC,cAAA,UAAQoB,UAAU,EAAMnB,UAAU,qBAAlC","file":"static/js/13.5eea6753.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useContext } from \"react\";\nimport CountdownNow from \"react-countdown-now\";\nimport { InvokerContext } from \"@neo-react/invoker\";\nimport { NLP2API } from \"@ftw-js/api\";\nimport moment from \"moment\";\n\ninterface Props {\n  nlp2API: NLP2API;\n}\n\nconst Draw = (props: Props) => {\n  const { nlp2API } = props;\n  const { status } = nlp2API;\n  const { state, dispatch } = useContext(InvokerContext);\n  const onDraw = (): void => {\n    if (state.wallet) {\n      const invokeScript = NLP2API.getInvokeScript.draw([state.wallet.address]);\n      dispatch.openInvoker({\n        ...invokeScript,\n      });\n    } else {\n      dispatch.openInvoker();\n    }\n  };\n\n  return (\n    <div className=\"card\" style={{ height: \"100%\" }}>\n      <div\n        className=\"card-image is-centered is-flex\"\n        style={{ justifyContent: \"center\", padding: 10 }}\n      >\n        <figure className=\"image is-128x128\">\n          <img alt={\"draw\"} src={process.env.PUBLIC_URL + \"/assets/draw.svg\"} />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <p className=\"title is-5\">Draw lottery</p>\n        <p className=\"subtitle is-6\">\n          Next drawing will be available at{\" \"}\n          {moment(status.nextDrawingAt).format(\"MM-DD hh:mm:ss\")}\n        </p>\n        <div className=\"content is-small\">\n          <ul>\n            <li>Earn 5% of total ticket sales of the current game</li>\n            <li>You need to participate the current game to be qualified</li>\n            <li>First come first serve basis</li>\n          </ul>\n        </div>\n        <CountdownNow\n          date={status.nextDrawingAt}\n          renderer={({ hours, minutes, seconds, completed }) => {\n            if (completed) {\n              return (\n                <button onClick={onDraw} className=\"button is-primary\">\n                  Draw\n                </button>\n              );\n            } else {\n              return (\n                <button disabled={true} className=\"button is-primary\">\n                  Draw\n                </button>\n              );\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Draw;\n"],"sourceRoot":""}