{"version":3,"sources":["../node_modules/@neo-react/local-wallet/lib/scenes/import-nep2/index.js","../node_modules/@neo-react/local-wallet/lib/scenes/import-nep2/components/form.js"],"names":["__webpack_require__","r","__webpack_exports__","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0__","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0___default","n","formik__WEBPACK_IMPORTED_MODULE_1__","_components_form__WEBPACK_IMPORTED_MODULE_2__","react_toastify__WEBPACK_IMPORTED_MODULE_3__","ImportNep2","Object","mapPropsToValues","props","encryptedKey","wallet","password","validate","values","errors","a","is","handleSubmit","_ref","setSubmitting","create","account","decrypt","then","onConnected","provider","address","privateKey","encrypted","catch","e","error","message","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_components_password_input__WEBPACK_IMPORTED_MODULE_2__","touched","isSubmitting","setFieldValue","submitForm","isValidSubmit","createElement","className","placeholder","value","onChange","target","isLoading","onKeyDown","val","type","disabled","concat"],"mappings":"8FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAIAS,EAAiBC,OAAAJ,EAAA,EAAAI,CAAU,CAE3BC,iBAAA,SAAAC,GACA,OACAC,aAAAD,EAAAE,QAAAF,EAAAE,OAAAD,aAAAD,EAAAE,OAAAD,aAAA,GACAE,SAAA,KAGAC,SAAA,SAAAC,GACA,IAAAC,EAAA,GAcA,OAZAD,EAAAJ,eACAK,EAAAL,aAAA,YAGAI,EAAAF,WACAG,EAAAH,SAAA,YAGSX,EAAAe,EAAIC,GAAAP,aAAAI,EAAAJ,gBACbK,EAAAL,aAAA,wCAGAK,GAEAG,aAAA,SAAAJ,EAAAK,GACA,IAAAV,EAAAU,EAAAV,MACAW,EAAAD,EAAAC,cACkBnB,EAAAe,EAAIK,OAAAC,QAAAR,EAAAJ,cACtBa,QAAAT,EAAAF,UAAAY,KAAA,SAAAF,GACAF,GAAA,GACAX,EAAAgB,YAAA,CACAC,SAAA,QACAC,QAAAL,EAAAK,QACAC,WAAAN,EAAAM,WACAlB,aAAAY,EAAAO,cAEKC,MAAA,SAAAC,GACLX,GAAA,GACMf,EAAA,EAAK2B,MAAAD,EAAAE,aAvCM1B,CA0CdH,EAAA,SACYL,EAAA,4CC/CfF,EAAAC,EAAAC,GAAA,IAAAmC,EAAArC,EAAA,GAAAsC,EAAAtC,EAAAK,EAAAgC,GAAA/B,EAAAN,EAAA,KAAAuC,EAAAvC,EAAA,KAGgBE,EAAA,iBAAAU,GAChB,IAAA4B,EAAA5B,EAAA4B,QACAtB,EAAAN,EAAAM,OACAuB,EAAA7B,EAAA6B,aACAxB,EAAAL,EAAAK,OACAyB,EAAA9B,EAAA8B,cACAC,EAAA/B,EAAA+B,WACA9B,EAAAI,EAAAJ,aACAE,EAAAE,EAAAF,SACA6B,EAAA/B,GAAAE,EACA,OAASuB,EAAAnB,EAAK0B,cAAevC,EAAA,EAAU,KAAQgC,EAAAnB,EAAK0B,cAAA,OACpDC,UAAA,SACKR,EAAAnB,EAAK0B,cAAA,OACVC,UAAA,SACG,iBAAoBR,EAAAnB,EAAK0B,cAAA,SAC5BC,UAAA,QACAC,YAAA,gBACAC,MAAAnC,EACAoC,SAAA,SAAAf,GACA,OAAAQ,EAAA,eAAAR,EAAAgB,OAAAF,UAEG9B,EAAAL,cAAA2B,EAAA3B,cAAkDyB,EAAAnB,EAAK0B,cAAA,OAC1DC,UAAA,kBACG5B,EAAAL,eAAyByB,EAAAnB,EAAK0B,cAAA,OACjCC,UAAA,SACKR,EAAAnB,EAAK0B,cAAA,OACVC,UAAA,SACG,YAAeR,EAAAnB,EAAK0B,cAAeN,EAAA,QAAa,CACnDY,UAAAV,EACAW,UAAA,WACA,QAAAR,GAAAD,KAEAM,SAAA,SAAAI,GACA,OAAAX,EAAA,WAAAW,IAEAL,MAAAjC,IACGG,EAAAH,UAAAyB,EAAAzB,UAA0CuB,EAAAnB,EAAK0B,cAAA,OAClDC,UAAA,kBACG5B,EAAAH,WAAqBuB,EAAAnB,EAAK0B,cAAA,UAC7BS,KAAA,SACAC,UAAAX,EACAE,UAAA,kBAAAU,OAAAf,EAAA,kBACG","file":"static/js/17.658abc92.chunk.js","sourcesContent":["import Neon from \"@cityofzion/neon-js\";\nimport { withFormik } from \"formik\";\nimport Form from \"./components/form\";\nimport { toast } from \"react-toastify\";\nvar ImportNep2 = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      encryptedKey: props.wallet && props.wallet.encryptedKey ? props.wallet.encryptedKey : \"\",\n      password: \"\"\n    };\n  },\n  validate: function validate(values) {\n    var errors = {};\n\n    if (!values.encryptedKey) {\n      errors.encryptedKey = \"Required\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Required\";\n    }\n\n    if (!Neon.is.encryptedKey(values.encryptedKey)) {\n      errors.encryptedKey = \"It is not valid encrypted key format\";\n    }\n\n    return errors;\n  },\n  handleSubmit: function handleSubmit(values, _ref) {\n    var props = _ref.props,\n        setSubmitting = _ref.setSubmitting;\n    var account = Neon.create.account(values.encryptedKey);\n    account.decrypt(values.password).then(function (account) {\n      setSubmitting(false);\n      props.onConnected({\n        provider: \"LOCAL\",\n        address: account.address,\n        privateKey: account.privateKey,\n        encryptedKey: account.encrypted\n      });\n    }).catch(function (e) {\n      setSubmitting(false);\n      toast.error(e.message);\n    });\n  }\n})(Form);\nexport default ImportNep2;","import React from \"react\";\nimport { Form as FormikForm } from \"formik\";\nimport PasswordInput from \"../../../components/password-input\";\nexport default (function (props) {\n  var touched = props.touched,\n      errors = props.errors,\n      isSubmitting = props.isSubmitting,\n      values = props.values,\n      setFieldValue = props.setFieldValue,\n      submitForm = props.submitForm;\n  var encryptedKey = values.encryptedKey,\n      password = values.password;\n  var isValidSubmit = encryptedKey && password;\n  return React.createElement(FormikForm, null, React.createElement(\"div\", {\n    className: \"field\"\n  }, React.createElement(\"div\", {\n    className: \"label\"\n  }, \"Encrypted key\"), React.createElement(\"input\", {\n    className: \"input\",\n    placeholder: \"Encrypted key\",\n    value: encryptedKey,\n    onChange: function onChange(e) {\n      return setFieldValue(\"encryptedKey\", e.target.value);\n    }\n  }), errors.encryptedKey && touched.encryptedKey && React.createElement(\"div\", {\n    className: \"help is-danger\"\n  }, errors.encryptedKey)), React.createElement(\"div\", {\n    className: \"field\"\n  }, React.createElement(\"div\", {\n    className: \"label\"\n  }, \"Password\"), React.createElement(PasswordInput, {\n    isLoading: isSubmitting,\n    onKeyDown: function onKeyDown() {\n      return isValidSubmit ? submitForm() : false;\n    },\n    onChange: function onChange(val) {\n      return setFieldValue(\"password\", val);\n    },\n    value: password\n  }), errors.password && touched.password && React.createElement(\"div\", {\n    className: \"help is-danger\"\n  }, errors.password)), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !isValidSubmit,\n    className: \"button is-link \".concat(isSubmitting ? \"is-loading\" : \"\")\n  }, \"Open wallet\"));\n});"],"sourceRoot":""}