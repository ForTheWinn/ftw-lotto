{"version":3,"sources":["scenes/results/Detail.tsx","scenes/results/List.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","moment_moment__WEBPACK_IMPORTED_MODULE_1__","moment_moment__WEBPACK_IMPORTED_MODULE_1___default","ResultDetail","_ref","data","gameNo","winningNumbers","caster","totalTickets","totalVerifiedTickets","ftxWinners","cneoWinners","cgasWinners","createdAt","a","createElement","className","join","concat","Math","round","moment","unix","format","data-label","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","ResultList","items","onClick","length","map","game","key","colSpan"],"mappings":"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","file":"static/js/28.69d3e497.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment/moment\";\n\nexport interface ResultProps {\n  data: ResultItem;\n}\n\nexport interface ResultItem {\n  gameNo: number;\n  winningNumbers: [number];\n  lastTicketNo: number;\n  caster: string;\n  ftxWinners: number[];\n  cneoWinners: number[];\n  cgasWinners: number[];\n  totalTickets: number;\n  totalVerifiedTickets: number;\n  createdAt: number;\n}\n\nconst ResultDetail = ({ data }: ResultProps) => {\n  const {\n    gameNo,\n    winningNumbers,\n    caster,\n    totalTickets,\n    totalVerifiedTickets,\n    ftxWinners,\n    cneoWinners,\n    cgasWinners,\n    createdAt,\n  } = data;\n\n  return (\n    <div className=\"content\">\n      <h6>Game no</h6>\n      <p>{gameNo}</p>\n      <h6>Winning numbers</h6>\n      <p>{winningNumbers.join(\",\")}</p>\n      <h6>Drawing caster</h6>\n      <p>{caster}</p>\n      <h6>Verification status</h6>\n      <p>{`${Math.round(\n        (totalVerifiedTickets / totalTickets) * 100\n      )}% (${totalVerifiedTickets}/${totalTickets})`}</p>\n      <h6>Drawing at</h6>\n      <p>{moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}</p>\n      {totalVerifiedTickets === totalTickets ? (\n        <div>\n          <h6>Winners</h6>\n          <table className=\"table is-bordered is-striped has-mobile-cards\">\n            <thead>\n              <tr>\n                <th>Matched</th>\n                <th>FTX tickets</th>\n                <th>CNEO tickets</th>\n                <th>CGAS tickets</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td data-label=\"Matched\">5 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[3]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[3]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[3]}</td>\n              </tr>\n              <tr>\n                <td data-label=\"Matched\">4 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[2]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[2]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[2]}</td>\n              </tr>\n              <tr>\n                <td data-label=\"Matched\">3 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[1]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[1]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[1]}</td>\n              </tr>\n              <tr>\n                <td data-label=\"Matched\">2 numbers</td>\n                <td data-label=\"FTX\">{ftxWinners[0]}</td>\n                <td data-label=\"CNEO\">{cneoWinners[0]}</td>\n                <td data-label=\"CGAS\">{cgasWinners[0]}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ResultDetail;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Result from \"./Detail\";\n\ninterface ResultsProps {\n  items?: Result[];\n  isLoading?: boolean;\n  onClick: (data: any) => void;\n}\n\ninterface Result {\n  gameNo: number;\n  winningNumbers: [number];\n  ticketNo: number;\n  player: string;\n  numbers: [number];\n  createdAt: number;\n}\n\nconst ResultList = ({ items, onClick }: ResultsProps) => {\n  return (\n    <table className=\"table is-fullwidth has-mobile-cards is-hoverable\">\n      <thead>\n        <tr>\n          <th>Draw #</th>\n          <th>Winning numbers</th>\n          <th>Played at</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map(game => {\n            const { winningNumbers, gameNo, createdAt } = game;\n\n            return (\n              <tr onClick={() => onClick(game)} key={gameNo}>\n                <td data-label=\"Game #\">{gameNo}</td>\n                <td data-label=\"Winning numbers\">{winningNumbers.join(\",\")}</td>\n                <td>\n                  {moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <tr>\n            <td colSpan={3}>No draws</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ResultList;\n"],"sourceRoot":""}