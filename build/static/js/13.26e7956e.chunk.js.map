{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","scenes/entries/components/ticket-detail/index.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","__webpack_require__","d","__webpack_exports__","TicketDetail","props","data","nlp2API","ticketNo","ticketCurrency","gameNo","numbers","player","isVerified","isClaimed","matched","prize","createdAt","_nlp2API$status","status","availableVerifications","currentLotteryNo","indexes","dispatch","useContext","InvokerContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","join","moment","unix","format","Fragment","type","getTicketCurrency","onClick","invokeScript","NLP2API","getInvokeScript","claim","openInvoker","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onClaim"],"mappings":"2FAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,ECXe,SAAAQ,EAAAC,GACf,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAA,MAAAF,UAAAD,GAAAC,UAAAD,GAAA,GACAI,EAAAX,OAAAY,KAAAF,GAEA,oBAAAV,OAAAa,wBACAF,IAAAG,OAAAd,OAAAa,sBAAAH,GAAAK,OAAA,SAAAC,GACA,OAAAhB,OAAAiB,yBAAAP,EAAAM,GAAAd,eAIAS,EAAAO,QAAA,SAAApB,GACMF,EAAcU,EAAAR,EAAAY,EAAAZ,MAIpB,OAAAQ,EAjBAa,EAAAC,EAAAC,EAAA,sBAAAhB,2GC8GeiB,UA3EM,SAACC,GAA6B,IACzCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEZC,EAUEF,EAVFE,SACAC,EASEH,EATFG,eACAC,EAQEJ,EARFI,OACAC,EAOEL,EAPFK,QACAC,EAMEN,EANFM,OACAC,EAKEP,EALFO,WACAC,EAIER,EAJFQ,UACAC,EAGET,EAHFS,QACAC,EAEEV,EAFFU,MACAC,EACEX,EADFW,UAZ+CC,EAcLX,EAAQY,OAA5CC,EAdyCF,EAczCE,uBACAC,EAfyCH,EAcjBI,QACxBD,iBAEAE,EAAaC,qBAAWC,KAAxBF,SASR,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIlB,GACJgB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAIpB,GACJkB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAIhB,GACJc,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAIjB,EAAQmB,KAAK,MACjBJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,aAAKG,IAAOC,KAAKf,GAAWgB,OAAO,0BACnCP,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACGf,EAAU,WAAAjB,OACImB,EADJ,YAEPM,IAAqBX,EACrB,UACA,aAENgB,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACGb,EAAU,EACTD,EACEY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAO,SAAA,KACER,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,YAAAhC,OAAOoB,EAAP,KAAApB,OA/DY,SAACuC,GACzB,OAAQA,GACN,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QAwDiBC,CAAkB3B,MAGpCiB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAO,SAAA,KACGd,EACCM,EAAAC,EAAAC,cAAA,UACES,QAAS,kBAxCT,SAAC7B,GAEf,IAAM8B,EAAeC,IAAQC,gBAAgBC,MAAM,CAACjC,IACpDe,EAASmB,YAAT5D,OAAA6D,EAAA,EAAA7D,CAAA,GACKwD,IAoCwBM,CAAQpC,IACvB2B,KAAK,SACLN,UAAU,qBAHZ,uBAQAH,EAAAC,EAAAC,cAAA,uCAIJ","file":"static/js/13.26e7956e.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { NLP2API } from \"@ftw-js/api\";\nimport { InvokerContext } from \"@neo-react/invoker\";\n\nexport interface Ticket {\n  gameNo: number;\n  ticketNo: number;\n  ticketCurrency: number;\n  player: string;\n  numbers: [number];\n  isVerified: boolean;\n  matched: number;\n  isClaimed: boolean;\n  prize: number;\n  createdAt: number;\n  referral: string;\n}\n\ninterface TicketDetailProps {\n  data: Ticket;\n  nlp2API: NLP2API;\n}\n\nconst getTicketCurrency = (type: number) => {\n  switch (type) {\n    case 1:\n      return \"FTX\";\n    case 2:\n      return \"CNEO\";\n    case 3:\n      return \"CGAS\";\n  }\n};\n\nconst TicketDetail = (props: TicketDetailProps) => {\n  const { data, nlp2API } = props;\n  const {\n    ticketNo,\n    ticketCurrency,\n    gameNo,\n    numbers,\n    player,\n    isVerified,\n    isClaimed,\n    matched,\n    prize,\n    createdAt,\n  } = data;\n  const { availableVerifications, indexes } = nlp2API.status;\n  const { currentLotteryNo } = indexes;\n\n  const { dispatch } = useContext(InvokerContext);\n  const onClaim = (ticketNo: number): void => {\n    // @ts-ignore\n    const invokeScript = NLP2API.getInvokeScript.claim([ticketNo]);\n    dispatch.openInvoker({\n      ...invokeScript,\n    });\n  };\n\n  return (\n    <div className=\"content\">\n      <h6>Game no</h6>\n      <p>{gameNo}</p>\n      <h6>Ticket no</h6>\n      <p>{ticketNo}</p>\n      <h6>Player</h6>\n      <p>{player}</p>\n      <h6>Numbers</h6>\n      <p>{numbers.join(\",\")}</p>\n      <h6>Created at</h6>\n      <p> {moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}</p>\n      <h6>Result</h6>\n      <p>\n        {isVerified\n          ? `Matched ${matched} numbers`\n          : currentLotteryNo === gameNo\n          ? \"Playing\"\n          : \"Verifying\"}\n      </p>\n      <h6>Claim</h6>\n      <p>\n        {matched > 1 ? (\n          isClaimed ? (\n            <>\n              <h6>Prize</h6>\n              <p>{`${prize} ${getTicketCurrency(ticketCurrency)}`}</p>\n            </>\n          ) : (\n            <>\n              {availableVerifications ? (\n                <button\n                  onClick={() => onClaim(ticketNo)}\n                  type=\"button\"\n                  className=\"button is-success\"\n                >\n                  Claim winning prize\n                </button>\n              ) : (\n                <p>Verifying other tickets (</p>\n              )}\n            </>\n          )\n        ) : null}\n      </p>\n    </div>\n  );\n};\n\nexport default TicketDetail;\n"],"sourceRoot":""}