{"version":3,"sources":["scenes/entries/scenes/all-tickets/list.tsx","scenes/entries/scenes/winners/list.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../../ftw-js/packages/fetch-paginate/lib/index.js","components/with-detail/index.tsx","scenes/entries/components/ticket-detail/index.tsx","scenes/entries/scenes/all-tickets/index.tsx","scenes/entries/scenes/winners/index.tsx","scenes/entries/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","List","_ref","items","onClick","a","createElement","className","length","map","item","key","ticketNo","data-label","numbers","join","player","moment","unix","createdAt","format","colSpan","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","WinnerList","gameNo","matched","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","d","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","bulma_pagination_react__WEBPACK_IMPORTED_MODULE_2__","bulma_pagination_react__WEBPACK_IMPORTED_MODULE_2___default","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_3__","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_3___default","_ref$pageSize","pageSize","load","children","_useState","_useState2","currentPage","setCurrentPage","_useState3","_useState4","totalItems","setTotalItems","_useState5","_useState6","setItems","_useState7","_useState8","isLoading","setLoading","_useState9","undefined","_useState10","error","setError","then","res","catch","e","message","childrenWithExtraProp","Children","child","cloneElement","Fragment","count","pages","Math","ceil","onChange","page","withDetail","ListComponent","DetailComponent","_React$PureComponent","_getPrototypeOf2","_this","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","args","Array","_key","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","state","data","onOpen","setState","onClose","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","assign","props","type","react_icons_fa__WEBPACK_IMPORTED_MODULE_7__","style","padding","React","PureComponent","TicketDetail","nlp2API","ticketCurrency","isVerified","isClaimed","prize","_nlp2API$status","status","availableVerifications","currentLotteryNo","indexes","dispatch","useContext","InvokerContext","getTicketCurrency","invokeScript","NLP2API","getInvokeScript","claim","openInvoker","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onClaim","_ftw_js_fetch_paginate__WEBPACK_IMPORTED_MODULE_1__","_components_with_detail__WEBPACK_IMPORTED_MODULE_2__","_list__WEBPACK_IMPORTED_MODULE_3__","_components_ticket_detail__WEBPACK_IMPORTED_MODULE_4__","_components_with_status__WEBPACK_IMPORTED_MODULE_5__","TicketList","Detail","withStatus","console","log","getEntries","getWinners","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","_scenes_all_tickets__WEBPACK_IMPORTED_MODULE_3__","_scenes_winners__WEBPACK_IMPORTED_MODULE_4__","withRouter","location","pathname","to","activeClassName","exact","path","component"],"mappings":"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","file":"static/js/4.b54c0dab.chunk.js","sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\nimport { Ticket } from \"../../components/ticket-detail\";\n\ninterface EntriesProps {\n  items?: Ticket[];\n  onClick: (item: Ticket) => void;\n  isLoading?: boolean;\n}\nconst List = ({ items, onClick }: EntriesProps) => {\n  return (\n    <table className=\"table is-hoverable is-fullwidth has-mobile-cards\">\n      <thead>\n        <tr>\n          <th>Ticket</th>\n          <th>Numbers</th>\n          <th>Player</th>\n          <th>Played at</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map(item => (\n            <tr onClick={() => onClick(item)} key={item.ticketNo}>\n              <td data-label=\"Ticket\">#{item.ticketNo}</td>\n              <td>{item.numbers.join(\",\")}</td>\n              <td>{item.player}</td>\n              <td>\n                {moment.unix(item.createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}\n              </td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={5}>No Entries</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\ninterface EntriesProps {\n  items?: EntryItem[];\n  onClick: (item: EntryItem) => void;\n  isLoading?: boolean;\n}\n\nexport interface EntryItem {\n  gameNo: number;\n  ticketNo: number;\n  ticketCurrency: number;\n  player: string;\n  numbers: [number];\n  isVerified: boolean;\n  matched: number;\n  isClaimed: boolean;\n  prize: number;\n  createdAt: number;\n  referral: string;\n}\n\nconst WinnerList = ({ items, onClick }: EntriesProps) => {\n  return (\n    <table className=\"table is-fullwidth has-mobile-cards is-hoverable\">\n      <thead>\n        <tr>\n          <th>Draw</th>\n          <th>Ticket</th>\n          <th>Numbers</th>\n          <th>Player</th>\n          <th>Matched</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items && items.length > 0 ? (\n          items.map(item => (\n            <tr onClick={() => onClick(item)} key={item.ticketNo}>\n              <td data-label=\"Draw\">#{item.gameNo}</td>\n              <td data-label=\"Ticket\">#{item.ticketNo}</td>\n              <td>{item.numbers.join(\",\")}</td>\n              <td>{item.player}</td>\n              <td>{item.matched} numbers</td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan={4}>No winners</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default WinnerList;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _slicedToArray from \"/Users/ed/Projects/modules/lottery/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from \"react\"; // @ts-ignore\n\nimport Pagination from \"bulma-pagination-react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nvar FetchPaginate = function FetchPaginate(_ref) {\n  var _ref$pageSize = _ref.pageSize,\n      pageSize = _ref$pageSize === void 0 ? 30 : _ref$pageSize,\n      load = _ref.load,\n      children = _ref.children;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalItems = _useState4[0],\n      setTotalItems = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(undefined),\n      _useState10 = _slicedToArray(_useState9, 2),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  useEffect(function () {\n    setLoading(true);\n    load(currentPage, pageSize).then(function (res) {\n      var items = res.items,\n          totalItems = res.totalItems;\n      setLoading(false);\n      setTotalItems(totalItems); // @ts-ignore\n\n      setItems(items);\n    }).catch(function (e) {\n      setLoading(false);\n      setError(e.message);\n    });\n  }, [currentPage]);\n  var childrenWithExtraProp = React.Children.map(children, function (child) {\n    return React.cloneElement(child, {\n      items: items,\n      isLoading: isLoading\n    });\n  });\n  return React.createElement(React.Fragment, null, error ? React.createElement(\"div\", {\n    className: \"notification is-danger\"\n  }, \"Failed to fetch data from the chain. Please try again.\") : null, isLoading ? React.createElement(Skeleton, {\n    count: 5\n  }) : React.createElement(React.Fragment, null, childrenWithExtraProp, React.createElement(\"hr\", null), React.createElement(Pagination, {\n    pages: Math.ceil(totalItems / pageSize),\n    currentPage: currentPage,\n    onChange: function onChange(page) {\n      return setCurrentPage(page);\n    }\n  })));\n};\n\nexport default FetchPaginate;","import React from \"react\";\nimport className from \"classnames\";\nimport { FaAngleLeft } from \"react-icons/fa\";\n\nconst withDetail = (ListComponent: any, DetailComponent: any) => {\n  return class List extends React.PureComponent {\n    state = {\n      data: undefined,\n    };\n\n    onOpen = (data: any) => {\n      this.setState({\n        data,\n      });\n    };\n\n    onClose = () => {\n      this.setState({ data: undefined });\n    };\n\n    render() {\n      const { data } = this.state;\n      return (\n        <div className=\"is-relative\">\n          <div className={className(data ? \"is-hidden\" : \"\")}>\n            <ListComponent {...this.props} onClick={this.onOpen} />\n          </div>\n          {data ? (\n            <div>\n              <div>\n                <button\n                  onClick={this.onClose}\n                  type=\"button\"\n                  className=\"button is-small is-light\"\n                >\n                  <FaAngleLeft /> Back to list\n                </button>\n                <div style={{ padding: \"15px\" }}>\n                  <DetailComponent {...this.props} data={data} />\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      );\n    }\n  }\n};\n\nexport default withDetail;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { NLP2API } from \"@ftw-js/api\";\nimport { InvokerContext } from \"@neo-react/invoker\";\n\nexport interface Ticket {\n  gameNo: number;\n  ticketNo: number;\n  ticketCurrency: number;\n  player: string;\n  numbers: [number];\n  isVerified: boolean;\n  matched: number;\n  isClaimed: boolean;\n  prize: number;\n  createdAt: number;\n  referral: string;\n}\n\ninterface TicketDetailProps {\n  data: Ticket;\n  nlp2API: NLP2API;\n}\n\nconst getTicketCurrency = (type: number) => {\n  switch (type) {\n    case 1:\n      return \"FTX\";\n    case 2:\n      return \"CNEO\";\n    case 3:\n      return \"CGAS\";\n  }\n};\n\nconst TicketDetail = (props: TicketDetailProps) => {\n  const { data, nlp2API } = props;\n  const {\n    ticketNo,\n    ticketCurrency,\n    gameNo,\n    numbers,\n    player,\n    isVerified,\n    isClaimed,\n    matched,\n    prize,\n    createdAt,\n  } = data;\n  const { availableVerifications, indexes } = nlp2API.status;\n  const { currentLotteryNo } = indexes;\n\n  const { dispatch } = useContext(InvokerContext);\n  const onClaim = (ticketNo: number): void => {\n    // @ts-ignore\n    const invokeScript = NLP2API.getInvokeScript.claim([ticketNo]);\n    dispatch.openInvoker({\n      ...invokeScript,\n    });\n  };\n\n  return (\n    <div className=\"content\">\n      <h6>Game no</h6>\n      <p>{gameNo}</p>\n      <h6>Ticket no</h6>\n      <p>{ticketNo}</p>\n      <h6>Player</h6>\n      <p>{player}</p>\n      <h6>Numbers</h6>\n      <p>{numbers.join(\",\")}</p>\n      <h6>Created at</h6>\n      <p> {moment.unix(createdAt).format(\"YYYY-MM-DD hh:mm:ss A\")}</p>\n      <h6>Result</h6>\n      <p>\n        {isVerified\n          ? `Matched ${matched} numbers`\n          : currentLotteryNo === gameNo\n          ? \"Playing\"\n          : \"Verifying\"}\n      </p>\n      <h6>Claim</h6>\n      <p>\n        {matched > 1 ? (\n          isClaimed ? (\n            <>\n              <h6>Prize</h6>\n              <p>{`${prize} ${getTicketCurrency(ticketCurrency)}`}</p>\n            </>\n          ) : (\n            <>\n              {availableVerifications ? (\n                <button\n                  onClick={() => onClaim(ticketNo)}\n                  type=\"button\"\n                  className=\"button is-success\"\n                >\n                  Claim winning prize\n                </button>\n              ) : (\n                <p>Verifying other tickets (</p>\n              )}\n            </>\n          )\n        ) : null}\n      </p>\n    </div>\n  );\n};\n\nexport default TicketDetail;\n","import React from \"react\";\nimport Paginate from \"@ftw-js/fetch-paginate\";\nimport withDetail from \"../../../../components/with-detail\";\nimport List from \"./list\";\nimport Detail from \"../../components/ticket-detail\";\nimport { NLP2API } from \"@ftw-js/api\";\nimport withStatus from \"../../../../components/with-status\";\n\nconst TicketList = withDetail(List, Detail);\n\ninterface Props {\n  nlp2API: NLP2API;\n}\n\nconst AllEntries = (props: Props) => {\n  console.log(\"Display: AllEntries\");\n  return (\n    <Paginate pageSize={30} load={props.nlp2API.getEntries}>\n      <TicketList {...props} />\n    </Paginate>\n  );\n};\n\nexport default withStatus(AllEntries);\n","import React from \"react\";\nimport Paginate from \"@ftw-js/fetch-paginate\";\nimport withDetail from \"../../../../components/with-detail\";\nimport List from \"./list\";\nimport Detail from \"../../components/ticket-detail\";\nimport { NLP2API } from \"@ftw-js/api\";\nimport withStatus from \"../../../../components/with-status\";\n\nconst TicketList = withDetail(List, Detail);\n\ninterface Props {\n  nlp2API: NLP2API;\n}\n\nconst Winners = (props: Props) => {\n  console.log(\"Display: Winners\");\n  return (\n    <Paginate pageSize={25} load={props.nlp2API.getWinners}>\n      <TicketList {...props} />\n    </Paginate>\n  );\n};\n\nexport default withStatus(Winners);\n","import React from \"react\";\nimport {\n  NavLink,\n  Route,\n  RouteComponentProps,\n  withRouter,\n} from \"react-router-dom\";\nimport AllEntries from \"./scenes/all-tickets\";\nimport Winners from \"./scenes/winners\";\nimport { NLP2API } from \"@ftw-js/api\";\n\ninterface Props {\n  nlp2API: NLP2API;\n}\n\nconst Entries = (props: Props & RouteComponentProps) => {\n  return (\n    <div className={\"box\"}>\n      <div className=\"tabs\">\n        <ul>\n          <li\n            className={\n              props.location.pathname === \"/entries\" ? \"is-active\" : \"\"\n            }\n          >\n            <NavLink to={`/entries`}>All entries</NavLink>\n          </li>\n          <li\n            className={\n              props.location.pathname === \"/entries/winnings\" ? \"is-active\" : \"\"\n            }\n          >\n            <NavLink activeClassName=\"is-active\" to={`/entries/winnings`}>\n              Winning tickets\n            </NavLink>\n          </li>\n          {/*<li*/}\n          {/*  className={*/}\n          {/*    props.location.pathname === \"/entries/my-ticket\"*/}\n          {/*      ? \"is-active\"*/}\n          {/*      : \"\"*/}\n          {/*  }*/}\n          {/*>*/}\n          {/*  <NavLink activeClassName=\"is-active\" to={`/entries/my-ticket`}>*/}\n          {/*    My tickets*/}\n          {/*  </NavLink>*/}\n          {/*</li>*/}\n        </ul>\n      </div>\n      <div>\n        <Route\n          exact={true}\n          path={`/entries`}\n          component={() => <AllEntries {...props} />}\n        />\n        <Route\n          exact={true}\n          path={`/entries/winnings`}\n          component={() => <Winners {...props} />}\n        />\n        {/*<Route*/}\n        {/*  exact={true}*/}\n        {/*  path={`${url}/winnings`}*/}\n        {/*  component={() => (*/}\n        {/*    <MyLotteryWinnings lotteryNo={lotteryNo} userAddress={address} />*/}\n        {/*  )}*/}\n        {/*/>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Entries);\n"],"sourceRoot":""}