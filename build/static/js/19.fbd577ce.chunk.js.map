{"version":3,"sources":["../../neo-react/packages/local-wallet/lib/scenes/import-nep2/components/form.js","../../neo-react/packages/local-wallet/lib/scenes/import-nep2/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","formik__WEBPACK_IMPORTED_MODULE_1__","_components_password_input__WEBPACK_IMPORTED_MODULE_2__","_components_display_error__WEBPACK_IMPORTED_MODULE_3__","props","touched","errors","isSubmitting","values","setFieldValue","submitForm","status","setStatus","encryptedKey","password","isValidSubmit","a","createElement","className","placeholder","value","onChange","e","target","isLoading","onKeyDown","val","error","message","onClose","undefined","type","disabled","concat","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0__","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0___default","_components_form__WEBPACK_IMPORTED_MODULE_2__","ImportNep2","Object","mapPropsToValues","wallet","validate","is","handleSubmit","_ref","setSubmitting","account","create","decrypt","then","onConnected","provider","address","privateKey","encrypted","catch"],"mappings":"8FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAyDeE,EAAA,QApDf,SAAAO,GACA,IAAAC,EAAAD,EAAAC,QACAC,EAAAF,EAAAE,OACAC,EAAAH,EAAAG,aACAC,EAAAJ,EAAAI,OACAC,EAAAL,EAAAK,cACAC,EAAAN,EAAAM,WACAC,EAAAP,EAAAO,OACAC,EAAAR,EAAAQ,UACAC,EAAAL,EAAAK,aACAC,EAAAN,EAAAM,SACAC,EAAAF,GAAAC,EACA,OAASf,EAAAiB,EAAKC,cAAehB,EAAA,EAAU,KAAQF,EAAAiB,EAAKC,cAAA,OACpDC,UAAA,SACKnB,EAAAiB,EAAKC,cAAA,OACVC,UAAA,SACG,iBAAoBnB,EAAAiB,EAAKC,cAAA,SAC5BC,UAAA,QACAC,YAAA,gBACAC,MAAAP,EACAQ,SAAA,SAAAC,GACA,OAAAb,EAAA,eAAAa,EAAAC,OAAAH,UAEGd,EAAAO,cAAAR,EAAAQ,cAAkDd,EAAAiB,EAAKC,cAAA,OAC1DC,UAAA,kBACGZ,EAAAO,eAAyBd,EAAAiB,EAAKC,cAAA,OACjCC,UAAA,SACKnB,EAAAiB,EAAKC,cAAA,OACVC,UAAA,SACG,YAAenB,EAAAiB,EAAKC,cAAef,EAAA,QAAa,CACnDsB,UAAAjB,EACAkB,UAAA,WACA,QAAAV,GAAAL,KAEAW,SAAA,SAAAK,GACA,OAAAjB,EAAA,WAAAiB,IAEAN,MAAAN,IACGR,EAAAQ,UAAAT,EAAAS,UAA0Cf,EAAAiB,EAAKC,cAAA,OAClDC,UAAA,kBACGZ,EAAAQ,cAAAH,MAAAgB,QAA8C5B,EAAAiB,EAAKC,cAAed,EAAA,QAAY,CACjFyB,QAAAjB,EAAAgB,MACAE,QAAA,WACA,OAAAjB,OAAAkB,MAEc/B,EAAAiB,EAAKC,cAAA,UACnBc,KAAA,SACAC,UAAAjB,EACAG,UAAA,kBAAAe,OAAA1B,EAAA,kBACG,mDCtDHZ,EAAAC,EAAAC,GAAA,IAAAqC,EAAAvC,EAAA,GAAAwC,EAAAxC,EAAAK,EAAAkC,GAAAjC,EAAAN,EAAA,KAAAyC,EAAAzC,EAAA,KAGA0C,EAAiBC,OAAArC,EAAA,EAAAqC,CAAU,CAE3BC,iBAAA,SAAAnC,GACA,OACAS,aAAAT,EAAAoC,QAAApC,EAAAoC,OAAA3B,aAAAT,EAAAoC,OAAA3B,aAAA,GACAC,SAAA,KAGA2B,SAAA,SAAAjC,GACA,IAAAF,EAAA,GAcA,OAZAE,EAAAK,eACAP,EAAAO,aAAA,YAGAL,EAAAM,WACAR,EAAAQ,SAAA,YAGSqB,EAAAnB,EAAI0B,GAAA7B,aAAAL,EAAAK,gBACbP,EAAAO,aAAA,wCAGAP,GAEAqC,aAAA,SAAAnC,EAAAoC,GACA,IAAAxC,EAAAwC,EAAAxC,MACAyC,EAAAD,EAAAC,cACAjC,EAAAgC,EAAAhC,UACAkC,EAAkBX,EAAAnB,EAAI+B,OAAAD,QAAAtC,EAAAK,cACtBD,OAAAkB,GACAgB,EAAAE,QAAAxC,EAAAM,UAAAmC,KAAA,SAAAH,GACAD,GAAA,GACAzC,EAAA8C,YAAA,CACAC,SAAA,QACAC,QAAAN,EAAAM,QACAC,WAAAP,EAAAO,WACAxC,aAAAiC,EAAAQ,cAEKC,MAAA,SAAAjC,GACLuB,GAAA,GACAjC,EAAA,CACAe,MAAAL,EAAAM,cA1CiBU,CA8CdF,EAAA,SACYvC,EAAA","file":"static/js/19.fbd577ce.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form as FormikForm } from \"formik\";\nimport PasswordInput from \"../../../components/password-input\";\nimport DisplayError from \"../../../components/display-error\";\n\nvar ImportNep2 = function ImportNep2(props) {\n  var touched = props.touched,\n      errors = props.errors,\n      isSubmitting = props.isSubmitting,\n      values = props.values,\n      setFieldValue = props.setFieldValue,\n      submitForm = props.submitForm,\n      status = props.status,\n      setStatus = props.setStatus;\n  var encryptedKey = values.encryptedKey,\n      password = values.password;\n  var isValidSubmit = encryptedKey && password;\n  return React.createElement(FormikForm, null, React.createElement(\"div\", {\n    className: \"field\"\n  }, React.createElement(\"div\", {\n    className: \"label\"\n  }, \"Encrypted key\"), React.createElement(\"input\", {\n    className: \"input\",\n    placeholder: \"Encrypted key\",\n    value: encryptedKey,\n    onChange: function onChange(e) {\n      return setFieldValue(\"encryptedKey\", e.target.value);\n    }\n  }), errors.encryptedKey && touched.encryptedKey && React.createElement(\"div\", {\n    className: \"help is-danger\"\n  }, errors.encryptedKey)), React.createElement(\"div\", {\n    className: \"field\"\n  }, React.createElement(\"div\", {\n    className: \"label\"\n  }, \"Password\"), React.createElement(PasswordInput, {\n    isLoading: isSubmitting,\n    onKeyDown: function onKeyDown() {\n      return isValidSubmit ? submitForm() : false;\n    },\n    onChange: function onChange(val) {\n      return setFieldValue(\"password\", val);\n    },\n    value: password\n  }), errors.password && touched.password && React.createElement(\"div\", {\n    className: \"help is-danger\"\n  }, errors.password)), status && status.error ? React.createElement(DisplayError, {\n    message: status.error,\n    onClose: function onClose() {\n      return setStatus(undefined);\n    }\n  }) : false, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !isValidSubmit,\n    className: \"button is-link \".concat(isSubmitting ? \"is-loading\" : \"\")\n  }, \"Open wallet\"));\n};\n\nexport default ImportNep2;","import Neon from \"@cityofzion/neon-js\";\nimport { withFormik } from \"formik\";\nimport Form from \"./components/form\";\nvar ImportNep2 = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: function mapPropsToValues(props) {\n    return {\n      encryptedKey: props.wallet && props.wallet.encryptedKey ? props.wallet.encryptedKey : \"\",\n      password: \"\"\n    };\n  },\n  validate: function validate(values) {\n    var errors = {};\n\n    if (!values.encryptedKey) {\n      errors.encryptedKey = \"Required\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Required\";\n    }\n\n    if (!Neon.is.encryptedKey(values.encryptedKey)) {\n      errors.encryptedKey = \"It is not valid encrypted key format\";\n    }\n\n    return errors;\n  },\n  handleSubmit: function handleSubmit(values, _ref) {\n    var props = _ref.props,\n        setSubmitting = _ref.setSubmitting,\n        setStatus = _ref.setStatus;\n    var account = Neon.create.account(values.encryptedKey);\n    setStatus(undefined);\n    account.decrypt(values.password).then(function (account) {\n      setSubmitting(false);\n      props.onConnected({\n        provider: \"LOCAL\",\n        address: account.address,\n        privateKey: account.privateKey,\n        encryptedKey: account.encrypted\n      });\n    }).catch(function (e) {\n      setSubmitting(false);\n      setStatus({\n        error: e.message\n      });\n    });\n  }\n})(Form);\nexport default ImportNep2;"],"sourceRoot":""}