{"version":3,"sources":["../../neo-react/packages/local-wallet/lib/scenes/create-wallet/components/backup.js","../../neo-react/packages/local-wallet/lib/scenes/create-wallet/components/form.js","../../neo-react/packages/local-wallet/lib/scenes/create-wallet/index.js"],"names":["__webpack_require__","r","__webpack_exports__","_Users_ed_Projects_modules_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","props","_useState","Object","_useState2","isAgreed","setAgreement","account","onConnected","a","createElement","className","style","wordBreak","password","address","encryptedKey","privateKey","type","checked","onChange","disabled","onClick","provider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","formik__WEBPACK_IMPORTED_MODULE_1__","_backup__WEBPACK_IMPORTED_MODULE_2__","_components_password_input__WEBPACK_IMPORTED_MODULE_3__","_components_display_error__WEBPACK_IMPORTED_MODULE_4__","touched","errors","isSubmitting","values","setFieldValue","submitForm","status","setStatus","onKeyDown","val","value","error","message","onClose","undefined","concat","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0__","_cityofzion_neon_js__WEBPACK_IMPORTED_MODULE_0___default","_components_form__WEBPACK_IMPORTED_MODULE_2__","yup__WEBPACK_IMPORTED_MODULE_3__","ValidateSchema","shape","required","CreateWallet","mapPropsToValues","validationSchema","handleSubmit","_ref","setSubmitting","create","encrypt","then","encrypted","catch","e"],"mappings":"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","file":"static/js/12.41610788.chunk.js","sourcesContent":["import _slicedToArray from \"/Users/ed/Projects/modules/lottery/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from \"react\";\n\nvar BackupKeys = function BackupKeys(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAgreed = _useState2[0],\n      setAgreement = _useState2[1];\n\n  var account = props.account,\n      onConnected = props.onConnected;\n  return React.createElement(\"div\", null, React.createElement(\"div\", {\n    className: \"notification is-info\"\n  }, \"You must save and backup the keys. If you lose them, you lose access to your assets.\"), React.createElement(\"div\", {\n    className: \"content\",\n    style: {\n      wordBreak: \"break-all\"\n    }\n  }, React.createElement(\"ul\", null, React.createElement(\"li\", null, \"Password: \", account.password), React.createElement(\"li\", null, \"Wallet address: \", account.address), React.createElement(\"li\", null, \"Encrypted key: \", account.encryptedKey), React.createElement(\"li\", null, \"Private key: \", account.privateKey))), React.createElement(\"hr\", null), React.createElement(\"label\", {\n    className: \"checkbox\"\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isAgreed,\n    onChange: function onChange() {\n      return setAgreement(!isAgreed);\n    }\n  }), \"\\xA0\\xA0I have saved the keys\"), React.createElement(\"hr\", null), React.createElement(\"button\", {\n    disabled: !isAgreed,\n    className: \"button is-link\",\n    onClick: function onClick() {\n      return onConnected({\n        provider: \"LOCAL\",\n        address: account.address,\n        encryptedKey: account.encryptedKey,\n        privateKey: account.privateKey\n      });\n    }\n  }, \"Open wallet\"));\n};\n\nexport default BackupKeys;","import React from \"react\";\nimport { Form as FormikForm } from \"formik\";\nimport BackupKeys from \"./backup\";\nimport PasswordInput from \"../../../components/password-input\";\nimport DisplayError from \"../../../components/display-error\";\nexport default (function (props) {\n  var onConnected = props.onConnected,\n      touched = props.touched,\n      errors = props.errors,\n      isSubmitting = props.isSubmitting,\n      values = props.values,\n      setFieldValue = props.setFieldValue,\n      submitForm = props.submitForm,\n      status = props.status,\n      setStatus = props.setStatus;\n  var account = values.account;\n\n  if (account) {\n    return React.createElement(BackupKeys, {\n      onConnected: onConnected,\n      account: values.account\n    });\n  } else {\n    return React.createElement(FormikForm, null, React.createElement(\"div\", {\n      className: \"field\"\n    }, React.createElement(\"div\", {\n      className: \"label\"\n    }, \"Password for new wallet\"), React.createElement(PasswordInput, {\n      onKeyDown: function onKeyDown() {\n        return submitForm;\n      },\n      onChange: function onChange(val) {\n        return setFieldValue(\"password\", val);\n      },\n      value: values.password\n    }), errors.password && touched.password && React.createElement(\"div\", {\n      className: \"help is-danger\"\n    }, errors.password)), status && status.error ? React.createElement(DisplayError, {\n      message: status.error,\n      onClose: function onClose() {\n        return setStatus(undefined);\n      }\n    }) : false, React.createElement(\"button\", {\n      disabled: !values.password,\n      className: \"button is-link \".concat(isSubmitting ? \"is-loading\" : \"\")\n    }, \"Create\"));\n  }\n});","import Neon from \"@cityofzion/neon-js\";\nimport { withFormik } from \"formik\";\nimport Form from \"./components/form\";\nimport * as Yup from \"yup\";\nvar ValidateSchema = Yup.object().shape({\n  password: Yup.string().required(\"Required\")\n});\nvar CreateWallet = withFormik({\n  mapPropsToValues: function mapPropsToValues() {\n    return {\n      password: \"\",\n      account: null\n    };\n  },\n  validationSchema: ValidateSchema,\n  handleSubmit: function handleSubmit(values, _ref) {\n    var setFieldValue = _ref.setFieldValue,\n        setSubmitting = _ref.setSubmitting,\n        setStatus = _ref.setStatus;\n    var account = Neon.create.account(\"\");\n    account.encrypt(values.password).then(function (account) {\n      setSubmitting(false);\n      setFieldValue(\"account\", {\n        address: account.address,\n        encryptedKey: account.encrypted,\n        privateKey: account.privateKey,\n        password: values.password\n      });\n    }).catch(function (e) {\n      setSubmitting(false);\n      setStatus({\n        error: e.message\n      });\n    });\n  }\n})(Form);\nexport default CreateWallet;"],"sourceRoot":""}